Legacy3D Engine copyright (c) 2006, Blaine Myers.

To Do:
	Finish the project, of course.  Seriously this to do list is just
	for things I want to impliment that I don't want to forget about.

Notes:
	Organization:
	The Legacy 3D proejct is organized using nameing conventions for
	filenames and types.

	File:  Files are named using the following conventions: 
	*prefix*_*suffix*.*ext* (eg. lv_sys.c).  The prefix represents the
	game system that uses the functions in that file, the suffix represents
	a particular part of that system.  The extension is simply the type
	of file.  Header files should match the name of the source file,
	except with a .h extension of course, with the exception that
	a *prefix*_sys.h file can be the header for any source files with
	the same prefix if desired.

	Current systems and prefixes:

	lg_: The Legacy Game System, sort of the entry point that controls
		all other systems.
	win_: The Windows system, deals with all windows specific API tasks.
	lv_: The Legacy Game Video System, deals with things related to 
		displaying graphics in the game.  Direct3D etc.
	ls_: The Legacy Game Sound System, deals with  things related to the
		audio in the game.
	lf_: The Legacy Game File System, deals with disk input and output
		for the game, as well as Legacy Archive (lpk) management.
	la_: The Legacy Archive System (contained in lf_sys.dll).  Deals with
		using Legacy Archive Files (lpk).
	lc_: The Legacy Console System (contained in lc_sys.dll).  Deals with
		functions relating to the console and the cvarlist.

	The suffix is used to specify the usage of the functions contained
	within it.  The standard suffix _sys contains the basic operations
	for that particular system, and may contain all of the functions.
	For larger systems the suffix generally is for a particular
	component (eg. The font system for the video is contained in
	lv_font.c).

	Functions:  Functions are typically prefixed with the system prefix
	in capital letters (eg. LG_Init() for an lg_ function).  Exceptions
	are functions that are used to manipulate handles (eg. CVar functions
	are prefixed CVar_, console Con_, Files File_, Font Font_, etc.).

	Types and Generic Functions and Macros:  All of the common stuff
	is contained in common.c and common.h this contains common functions
	and all of the types used in the game.  Types are prefixed with
	and L_ followed by a short description of the type in lower case
	letters. (eg. L_dword for dwords (unsigned long).  Macros and
	functions are also prefixed with a L_, but not necessarily in 
	lower or upper case.  (I do want to change this for easier reading).
		

2/14/2006 - Valentines day, and I love computer programming, so what
	better day to start this project than today.  I began simply by
	initializing Direct3D.  For now everything is pretty much just
	dummy stuff.  I decided to call the engine Legacy3D, because it
	will be used to power the "Legacy of Heaven & Hell" game.  It's been
	a while since I've programmed so I've started from scratch, using
	D3DDemo as an example so that I can get used to Direct3D again.
	My next plan is to reimpliment the console, there are a few things
	that I wanted to change from the GFX3D9 version of the BeemConsole
	so I'm not just strait out bringing it over.

3/2/2006 - For the past couple of weeks I have been working on the console
	which is called legacy console.  It is contained in the file lconsole.dll.
	I got the console working pretty good so I finally started working on
	legacy3d again.  Now the game loads variables from a config file, and from
	there it sets up Direct3D using that information.  Right now the way it is
	initialized works, but I think there should probably be less cvars, as
	some of the variables are probably things that don't need to be changed
	for a game.  And some of them are just too complicated to understand.
	It is doing pretty good so far though, so I'm pretty satisfied, in a few
	more days we might get to the point that I'm actually rendering something.
	But before that I'll need to develop 2D so that I can actually see the
	console.  The console still needs a cmdlist function though.

3/3/2006 - Redid some work on the console, and changed a lot of the way the
	game works, to try to make the code less ugly.  Still aren't rendering
	anything yet, hopefully I will be soon.  I don't want to start rendering
	untill I'm sure all the default stuff is pretty stable.  Also I still need
	the game to run some checks on the configuration settings to make sure they
	are valid.

3/6/2006 - I've put quite a bit of work into the basic setup of the game.  I
	reworked a lot of functions, to be easier to read, and to be more
	consistent.  I also put a lot of D3D checking to make sure that the 
	specified modes are allowed on the graphics processor.  Also fixed
	a few bugs in the console.  Still aren't rendering anything.  Need to
	develop a 2D font engine.

3/17/2006 - I've put quite a bit of work into the game basics.  Some sound
	initialization stuff is up and running, and the game plays a basic test
	sound.  Also I did develop a 2d image engine, and a font engine, but the
	font engine was insanely slow and looked bad, so I used ID3DXFont instead,
	along with the 2D image engine and font engine, I developed the basic
	graphical console, and I did some new art for the console background.
	I've built several more console functions based around different debug
	features of the game.  Most impressively, I've built a pak file format
	for the game engine.  It is a simple format with no compression, and
	no encryption.  I made a program called larchiver, that will build
	an archive out of a directory tree.  I've put all the test images and
	sounds into archives to test out how it works with the system, and so
	far it works great so I'm satisfied.  Still no actual 3D rendering being
	done.  Also I interviewed at UPS, so I may have a job soon enough.

3/21/2006 - Work quite a bit more on the file system, or at least on the
	LPK utilities.  LPK is the fileformat for the supported archives in
	Legacy3D it stands for Legacy Package (I guess).  Anyway I made the
	warchiver.exe utility, which is windows based and it will allow the
	user to select a direcory tree to archive, and an output file to 
	arhive to.  I learned some new stuff while developing warchiver, for
	one it uses the progress bar, and for two it uses multithreading (which
	is my first time programming multithreaded stuff).  I've also read
	some more, so the development process should pick up here shortly.

3/31/2006 - I now work for UPS so I won't have as much time to work on
	Legacy.  Today, I reworked a little bit of the audio system, and it
	now supports the OGG (Ogg Vorbis) file format.

7/2/2006 - Well it has been a while since I have written in this log so
	I thought I would write a little bit.  Well I have played a little
	around with light mapping so I think the final map format will use
	light mapping (the map format is a ways away though).  I have also
	begun development of the Legacy 3D Model format (extension L3DM), and
	I have written a plugin for Milkshape 3D.  Right now the model format
	is pretty raw, but I will work on getting it solid and optimized.  Also
	I have been workig out lots of kinks and preparing the engine for
	future features.  I want to rework the file system a little so that
	directories can be changed and archive files can be accessed using
	the relative things (such as . and .. eg. base\..\mod\textures\ type 
	of thing.

7/14/2006 - Just to update I have found a couple of bugs in the code that
	I have repaired.  Also the model format is coming along nicely.  I also
	developed a texture viewer application that will show different mip
	map sublevels and the alpha channel and other cool features for the TGA
	file format.  I'm considering adding BMP support to the TGA library.  It
	wouldn't necessarily be that difficult to convert a BMP file to a TGA
	file then call all the same functions on it.
